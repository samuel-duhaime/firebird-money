name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-build-and-test:
    name: Backend Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: firebirdpass
          POSTGRES_DB: firebird_money
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U firebird"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install backend dependencies
        working-directory: backend
        run: poetry install

      - name: Copy .env.example to .env
        working-directory: backend
        run: cp .env.example .env

      # - name: Wait for PostgreSQL to be ready
      #   run: |
      #     until pg_isready -h localhost -p 5432 -U firebird; do
      #       sleep 1
      #     done

      - name: Check Black formatting
        working-directory: backend
        run: poetry run black --check src

      - name: Run backend linting
        working-directory: backend
        run: poetry run ruff check src

      - name: Run backend API tests
        working-directory: backend
        run: poetry run pytest

      - name: Start backend server
        working-directory: backend
        run: poetry run start &

  frontend-build-and-test:
    name: Frontend Build and Test
    needs: backend-build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Check Prettier formatting
        working-directory: frontend
        run: npm run format -- --check

      - name: Build frontend project
        working-directory: frontend
        run: npm run build

      - name: Run frontend linting
        working-directory: frontend
        run: npm run lint

      - name: Run frontend unit tests
        working-directory: frontend
        run: echo "Running unit tests..." && echo "No tests implemented yet."

      - name: Start frontend server
        working-directory: frontend
        run: npm start &

      - name: Run frontend UI tests
        working-directory: frontend
        run: echo "Running UI tests..." && echo "No tests implemented yet."
